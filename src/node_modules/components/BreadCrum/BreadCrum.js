import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import color from '../color';

const BreadCrumItem = styled.span`
  font-size: 0.8em;
  line-height: 11px;
  color: ${color.grey_main};
  cursor: pointer;
`;

const Arrow = styled.span`
  font-size: 0.6em;
  margin: 0 0.8em;
`;

const BreadCrumItemLast = styled.span`
  font-size: 0.8em;
  line-height: 11px;
  color: ${color.orange_main};
`;

const handleOnClick = (item, onClick) => {
  if (item.href) {
    window.location.href = item.href;
    if (onClick) {
      onClick(item);
    }
  } else {
    if (onClick) {
      onClick(item);
    }
  }
};

const getBreadCrums = (data, style, onClick) => {
  const DATA = [];
  for (let count = 0; count < data.length; count++) {
    const item = data[count];
    if (count === data.length - 1) {
      DATA.push(<BreadCrumItemLast key={count} style={style} id={item.id} onClick={handleOnClick.bind(this, item, onClick)}>{item.name}</BreadCrumItemLast>);
    } else {
      DATA.push(<BreadCrumItem key={'item' + count} style={style} id={item.id} onClick={handleOnClick.bind(this, item, onClick)}>{item.name}</BreadCrumItem>);
      DATA.push(<Arrow key={'arrow' + count} className='icon-Right'> > </Arrow>);
    }
  }
  return DATA;
};

const BreadCrum = props => {
  const {data, style, onClick} = props;
  return <p>{getBreadCrums(data, style, onClick)}</p>;
}

BreadCrum.propTypes = {
  /** data array of object {id: , name: ''} */
  data: PropTypes.array,
  /** style override */
  style: PropTypes.object,
  /** onClick breadcrum item */
  onClick: PropTypes.func
};

BreadCrum.defaultProps = {
  data: [],
  style: {}
};

export default BreadCrum;
